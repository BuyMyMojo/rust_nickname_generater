var searchIndex = JSON.parse('{\
"rust_nickname_generater":{"doc":"“ay that’s where the ’stralian accent comes through…","t":[0,5,5,5,5,5,5,5,0,0,4,13,13,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,3,3,4,13,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17],"n":["error","generate_name","generate_random_name","get_all_template_examples","get_all_template_names","get_all_templates","get_template_by_name","get_templates_of_type","template_struct","templates","Error","LengthLimit","NoValidName","Result","StringTemplate","borrow","borrow_mut","eq","fmt","fmt","from","from","into","ne","to_string","try_from","try_into","type_id","vzip","0","Function","FunctionVar","Macro","NameInfo","NameTemplate","NameType","Var","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contents","example","fmt","fmt","fmt","from","from","from","info","into","into","into","len","name","name_type","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","FUNCTION_TEMPLTES","FUNCTION_VARIABLE_TEMPLTES","MACRO_TEMPLTES","VARIABLE_TEMPLTES"],"q":["rust_nickname_generater","","","","","","","","","","rust_nickname_generater::error","","","","","","","","","","","","","","","","","","","rust_nickname_generater::error::Error","rust_nickname_generater::template_struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rust_nickname_generater::templates","","",""],"d":["","Given a useranem and NameTemplate output the rendered name","Generate a random name that fits within a specified …","Returns a Vec of all template names","Returns a Vec of all template names","Returns a Vec of all built in templates","Returns an option with a name matching the input","Returns a Vec of templates matching specified type","","All of the templates built into this lib are meant to …","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A list of function looking templates","A list of templates with the username inside a function","A list of templates with the username inside a macro","A list of variable looking templates"],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,0,0,0,3,4,5,3,4,5,3,4,5,3,4,5,3,4,4,4,5,3,4,5,3,4,4,5,3,5,4,5,4,5,3,4,5,3,4,5,3,4,5,3,4,5,3,0,0,0,0],"f":[null,[[["string",3],["nametemplate",3]],["result",6,[["string",3]]]],[[["string",3],["u32",0]],["result",6,[["string",3]]]],[[],["vec",3,[["string",3]]]],[[],["vec",3,[["string",3]]]],[[],["vec",3,[["nametemplate",3]]]],[[["string",3]],["option",4,[["nametemplate",3]]]],[[["nametype",4]],["vec",3,[["nametemplate",3]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["error",4],["error",4]],["bool",0]],[[["error",4],["formatter",3]],["result",6]],[[["error",4],["formatter",3]],["result",6]],[[["templateerror",3]],["error",4]],[[]],[[]],[[["error",4],["error",4]],["bool",0]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["nametemplate",3]],["nametemplate",3]],[[["nameinfo",3]],["nameinfo",3]],[[["nametype",4]],["nametype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["nametemplate",3],["formatter",3]],["result",6]],[[["nameinfo",3],["formatter",3]],["result",6]],[[["nametype",4],["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],null,null,null,null],"p":[[4,"Error"],[13,"StringTemplate"],[4,"NameType"],[3,"NameTemplate"],[3,"NameInfo"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
